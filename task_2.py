"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def numbers(a):
    global even
    global odd
    if a == 0:
        return (f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})")
    b = a % 10
    res = b % 2
    if res == 0:
        even += 1
    else:
        odd += 1
    return numbers(a // 10)

even = 0
odd = 0

a = float(input("Введите число: "))
print(numbers(a))

